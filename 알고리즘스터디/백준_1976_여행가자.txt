import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.Stack;

class Main {
	static int isCity;
	static int isVisitCity;
	static int[][] map;
	static int[] path;
	

	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
	    
	    isCity = sc.nextInt();
	    isVisitCity = sc.nextInt();
	    map = new int [isCity][isCity];
	    path = new int [isVisitCity];
	    
	    for(int i=0; i< isCity; i++) {
	    	for(int j=0; j< isCity; j++) {
	    		map[i][j] = sc.nextInt();
	        }	
	    }
	    for(int i=0; i< isVisitCity; i++) {
	    	path[i] = sc.nextInt()-1;
	    }
	    for(int i=0; i< isVisitCity-1; i++) {
	    	if(!dfs(path[i], path[i+1])) {
	    		System.out.println("NO");
	    		return;
	    	}
	    }
	    System.out.println("YES");
		return;    
	}
	
	static boolean dfs(int a, int b) {
		boolean [] visited = new boolean [isCity];
		Stack<Integer> mystack = new Stack<>();
		mystack.push(a);
		
		while(!mystack.empty()) {			
			int curr = mystack.pop();
			if(curr == b) return true;
			
			if(visited[curr]) continue;
			visited[curr] = true;
			
			for(int next = 0; next < isCity; ++next) {
				if(!visited[next]  && map[curr][next]!=0) {
					mystack.push(next);
				}
			}
		}
		return false;		
	}

}